#!/bin/bash

# alorenzetti 20190419

# this script will run deepbinner with basecalled reads
# for more information read https://github.com/rrwick/Deepbinner#using-deepbinner-after-basecalling

threads=22
fast5dir="20190418_2336_MN22802_FAH64370_58c10307/fast5/"
fast5singledir="20190419_single_fast5"
basecalleddir="20190419_basecalled"
deepbinnerdir="20190419_deepbinner"

if [[ ! -d $deepbinnerdir ]] ; then mkdir $deepbinnerdir ; fi

if [[ ! -d $fast5singledir ]] ; then mkdir $fast5singledir ; fi

# in order to deepbinner work we need to convert multi fast5 to single fast5
multi_to_single_fast5 -i $fast5dir \
                      -s $fast5singledir \
                      -t $threads \
                      --recursive

# we also need to merge the fastq files generated by guppy
find $basecalleddir -name "*.fastq" -exec cat {} + > ${deepbinnerdir}/all_basecalled_reads.fastq

# classifying reads
deepbinner classify -s /opt/Deepbinner/models/EXP-NBD103_read_starts \
                    -e /opt/Deepbinner/models/EXP-NBD103_read_ends \
                    --intra_op_parallelism_threads $threads \
                    --omp_num_threads $threads \
                    --verbose \
                    $fast5singledir > ${deepbinnerdir}/classifications 2> ${deepbinnerdir}/deepbinner_classify.err

# binning fastqreads
deepbinner bin --classes ${deepbinnerdir}/classifications \
               --reads ${deepbinnerdir}/all_basecalled_reads.fastq \
               --out_dir ${deepbinnerdir} > ${deepbinnerdir}/deepbinner_bin.log 2>&1
